var channelNameList = [],
    playlistList = [],
    trackList = [],
    numOfTracksInTrackList = 0,
    nextPageToken,
    numOfTracksApiCall = 50,
    numOfTracksBeforeEndOfPlaylist = 3, // this number cannot equal to numOfTracksForSplittingPlayedAndRemaining
    numOfTracksForSplittingPlayedAndRemaining = 2, // to keep next song and randomize the rest
    currentTrack = 0,
    initializePlayer = false,
    playerWidth = 545,
    playerHeight = 305,
    interval;

var tracks = {
  storeChannelId: function(channelUsername) {
    if (typeof channelUsername === 'object') {
      channelUsername = $('#searchChannel').val();
      $('#searchChannel').val('');
    }

    if ($.inArray(channelUsername, channelNameList) === -1 ) {
      channelNameList.push(channelUsername);
      $.ajax({
        type: 'GET',
        url: 'https://www.googleapis.com/youtube/v3/search?part=snippet&q=' + channelUsername + '&type=channel&key=' + 'AIzaSyDgBp5KPiA5xyQqnGWs-mM7p5YLRm_hmKM',
        success: function(data) {
          if (data.items[0] !== undefined) {
            var channelId = data.items[0].id.channelId;
            tracks.retrievePlaylist(channelId);

            app.announceMsg("You've added <span class='channelName'>" + channelUsername + "</span> to your current playlist.");

            var channelThumbnailUrl = data.items[0].snippet.thumbnails.medium.url;
            app.appendChannelToPlaylist(channelUsername, channelThumbnailUrl);
          } else {
            app.announceMsg("The channel you entered is not valid.");
          }
        },
        error: function(data, textStatus, errorThrown) {
          console.log("Error!");
        }
      });
    } else {
      app.announceMsg("You already have this channel in your playlist.");
      $('#searchChannel').val('');
    }
  },
  retrievePlaylist: function(channelId) {
    $.ajax({
      type: 'GET',
      url: 'https://www.googleapis.com/youtube/v3/channels?part=snippet%2C+contentDetails&id=' + channelId + '&key=' + 'AIzaSyDgBp5KPiA5xyQqnGWs-mM7p5YLRm_hmKM',
      success: function(data) {
        var playlistId = data.items[0].contentDetails.relatedPlaylists.uploads;
        playlistList.push(playlistId);
        tracks.retrieveTracks(playlistId);
      },
      error: function(data, textStatus, errorThrown) {
        console.log("Error!");
      }
    });
  },
  storeTracksInArray: function(data, tracklist) {
    var numOfTracks = data.items.length;
    if (numOfTracks < numOfTracksApiCall) {
      numOfTracksApiCall = numOfTracks
    } else if (numOfTracks = undefined) {
      app.announceMsg("This channel has no videos.");
    }

    $.each(_.range(numOfTracksApiCall), function(n) {
        var trackInfo = {
          trackTitle: data.items[n].snippet.title,
          trackId: data.items[n].contentDetails.videoId,
          channelTitle: data.items[n].snippet.channelTitle,
          thumbnail: data.items[n].snippet.thumbnails.default.url
        };
        tracklist.push(trackInfo);
        numOfTracksInTrackList += 1;
    });
  },
  randomizeRemainingTracks: function(newSetOfTracks) {
    var playedTrackList = trackList.slice(0, currentTrack + numOfTracksForSplittingPlayedAndRemaining);
    var remainingTrackList = trackList.slice(-(trackList.length - (currentTrack + numOfTracksForSplittingPlayedAndRemaining)));
    var newRemainingTrackList = remainingTrackList.concat(newSetOfTracks);
    newRemainingTrackList = _.shuffle(newRemainingTrackList);
    trackList = playedTrackList.concat(newRemainingTrackList);
  },
  retrieveTracks: function(playlistId) {
    $.ajax({
      type: 'GET',
      url: 'https://www.googleapis.com/youtube/v3/playlistItems?part=snippet%2C+contentDetails&maxResults=' + numOfTracksApiCall + '&playlistId=' + playlistId + '&fields=items(contentDetails%2Csnippet)%2CnextPageToken&key=' + 'AIzaSyDgBp5KPiA5xyQqnGWs-mM7p5YLRm_hmKM',
      success: function(data) {
        var newSetOfTracks = [];
        tracks.storeTracksInArray(data, newSetOfTracks);
        tracks.randomizeRemainingTracks(newSetOfTracks);
        nextPageToken = data.nextPageToken;
        if (initializePlayer === false) {
          player.playTrack();
          player.renderTrackInfo();
          initializePlayer = true;
        }
      },
      error: function(data, textStatus, errorThrown) {
        console.log("Error!");
      }
    });
  },
  retrieveNextSetOfTracks: function() {
    for (i = 0; i < playlistList.length; i++) {
      (function(i) {
        $.ajax({
          type: "GET",
          url: "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet%2C+contentDetails&maxResults=" + numOfTracksApiCall + "&pageToken=" + nextPageToken + "&playlistId=" + playlistList[i] + "&fields=items(contentDetails%2Csnippet)%2CnextPageToken&key=" + 'AIzaSyDgBp5KPiA5xyQqnGWs-mM7p5YLRm_hmKM',
          success: function(data) {
            var newSetOfTracks = [];
            tracks.storeTracksInArray(data, newSetOfTracks);
            tracks.randomizeRemainingTracks(newSetOfTracks);
            nextPageToken = data.nextPageToken;
            player.renderTrackInfo();
          },
          error: function(data, textStatus, errorThrown) {
            console.log("Error!");
          }
        });
      })(i);
    }
  }
};

var player = {
  playTrack: function() {
    var main = $('#player');
    main.html('');
    main.append('<div id="playerObject"><object type="application/x-shockwave-flash" id="ytplayer" data="http://www.youtube.com/v/' + trackList[currentTrack].trackId + '?enablejsapi=1&amp;playerapiid=ytplayer&amp;version=3&autoplay=1" height="' + playerHeight + '" width="' + playerWidth + '"><param name="allowScriptAccess" value="always"></object></div><div id="playerControl"></div>');
  },
  renderNextTrack: function() {
    var nowPlaying = $('#playerObject');
    currentTrack += 1;
    nowPlaying.html('');
    nowPlaying.append('<object type="application/x-shockwave-flash" id="ytplayer" data="http://www.youtube.com/v/' + trackList[currentTrack].trackId + '?enablejsapi=1&amp;playerapiid=ytplayer&amp;version=3&autoplay=1" height="' + playerHeight + '" width="' + playerWidth + '"><param name="allowScriptAccess" value="always"></object>');
    if (currentTrack === (numOfTracksInTrackList - numOfTracksBeforeEndOfPlaylist)) {
      tracks.retrieveNextSetOfTracks();
    } else {
      player.renderTrackInfo();
    }
  },
  renderTrackInfo: function() {
    $('#now-playing').remove();
    $('#next-track').remove();

    var currentSource = $('#currenttrackinfo-template').html();
    var currentTemplate = Handlebars.compile(currentSource);
    var currentTrackInfoHTML = currentTemplate(trackList[currentTrack]);
    $('#playerControl').append(currentTrackInfoHTML);

    var nextSource = $('#nexttrackinfo-template').html();
    var nextTemplate = Handlebars.compile(nextSource);
    var nextTrackInfoHTML = nextTemplate(trackList[currentTrack + 1]);
    $('#playerControl').append(nextTrackInfoHTML);
  }
};

var app = {
  addRecommendedChannel: function() {
    var recommendedChannel = $(this).children().data("channel");
    tracks.storeChannelId(recommendedChannel);
  },
  announceMsg: function(text) {
    function disappearMsg() {
      clearInterval(interval);
      interval = setInterval(function() {
        $('.flashMessage').fadeOut('fast');
      }, 2000);
    }
    var errorMessage = $("<div class='flashMessage'></div>");
    errorMessage.append(text);
    errorMessage.hide().appendTo($('#search')).fadeIn('fast');
    disappearMsg();
  },
  appendChannelToPlaylist: function(channelUsername, channelThumbnailUrl) {
    var newPlaylistItem = $("<li></li>");
    newPlaylistItem.append('<h4>' + channelUsername + '</h4>');
    var newPlaylistThumnail = document.createElement('img');
    newPlaylistThumnail.src = channelThumbnailUrl;
    newPlaylistThumnail.alt = channelUsername;
    newPlaylistItem.append(newPlaylistThumnail);
    newPlaylistItem.hide().appendTo($('#current-playlist')).slideDown();
  }
};

var onYouTubePlayerReady = function (playerId) {
  var player = document.getElementById("ytplayer");
  player.addEventListener("onStateChange", "onytplayerStateChange");
};

var onytplayerStateChange = function (newState) {
  if (newState === 0) {
    player.renderNextTrack();
  }
};


$(function() {
  $('#btnSearchChannel').on('click', tracks.storeChannelId);
  $('#misc').on('click', '#recommended-channel li', app.addRecommendedChannel);
  $('#player').on('click', '#next-track .trackinfo', player.renderNextTrack);

  $("#searchChannel").keypress(function(event){
    var channelUsername = $('#searchChannel').val();
    if(event.keyCode == 13 && channelUsername != ''){
      event.preventDefault();
      tracks.storeChannelId(channelUsername);
      $('#searchChannel').val('');
    }
  });
});